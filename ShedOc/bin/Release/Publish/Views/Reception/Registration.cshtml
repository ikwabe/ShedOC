
@using System.Data

@model ShedOc.Models.Patients

@{
    ViewBag.Title = "Registration";
}

<h2>Registration</h2>


@using (Html.BeginForm("Create", "Reception", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("ShedOC", "Registration", "Reception", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Sign Out", "SignOut", "Home")</li>
                    <li>@Html.ActionLink("Registration", "Registration", "Reception")</li>
                    <li>@Html.ActionLink("Check in", "Check", "CheckIn")</li>
                    <li>@Html.ActionLink("Dummy Ticket", "Index", "Dummy")</li>
                </ul>
            </div>
        </div>
    </div>

    <style>
        .mystyle {
            font-family: Calibri;
            font-size: 16px;
        }

        .labelColor {
            color: dodgerblue;
            font-weight: bold;
            font-variant-caps: all-petite-caps;
        }

        .cursor {
            cursor: pointer;
        }
    </style>

    <div class="form-horizontal">
        <h4>Patients</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-xs-2 mystyle">Gender</label>
            <div class="col-md-10">
                <select class="form-control cursor"  onchange ="getValue(this);" id="gender">
                    <option value="M" id="male">Male</option>
                    <option value="F" id="female">Female</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-xs-2 mystyle">Tribe</label>
            <div class="col-md-10">
                <select  class="form-control cursor" onchange ="getValue(this);" id="tribe">
                    @{
                        for (int i = 0; i < Model.Tribecode.Rows.Count; i++)
                        {
                            <option  value=@Model.Tribecode.Rows[i][0].ToString() id="@Model.Tribecode.Rows[i][0].ToString()">@Model.Tribecode.Rows[i][1].ToString()</option>
                        }

                    }
                    
                </select>
            </div>
        </div>
       
        <div class="form-group">
            @Html.LabelFor(model => model.District, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })

            </div>

        </div>

        <div class="form-group">
            <label class="col-xs-2">Occupation</label>
            <div class="col-md-10">
                <select class="form-control cursor" onchange ="getValue(this);" id="occupation">
                    @{
                        for (int i = 0; i < Model.Occupationcode.Rows.Count; i++)
                        {
                            <option value=@Model.Occupationcode.Rows[i][0].ToString() id="@Model.Occupationcode.Rows[i][0].ToString()">@Model.Occupationcode.Rows[i][0].ToString()</option>
                        }

                    }
                    
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contacts, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contacts, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contacts, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NextOfKin, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NextOfKin, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NextOfKin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Region, htmlAttributes: new { @class = " col-xs-2 mystyle" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Region, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Region, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Register Patient" class="btn btn-primary" onclick="location.href='@Url.Action("Create","Reception")'" />
            </div>
        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Registration")
    </div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">

    function getValue(x) {

        var elemnt = document.getElementById(x.id).value;
        alert(elemnt);
    }

</script>