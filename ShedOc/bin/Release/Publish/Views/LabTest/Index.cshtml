@model ShedOc.Models.Reports

@{
    ViewBag.Title = "Index";
}

<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("ShedOC", "Index", "Report", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li>@Html.ActionLink("Sign Out", "SignOut", "Home")</li>
                <li>@Html.ActionLink("Reports", "Index", "Report")</li>
                <li><a href="#">Activity</a></li>
            </ul>
        </div>
    </div>
</div>
<br />
<br />

<style>
    .mystyle {
        font-family: Calibri;
        font-size: 16px;
    }

    .labelColor {
        color: dodgerblue;
        font-weight: normal;
        font-variant-caps: all-petite-caps;
    }

    .cursor {
        cursor: pointer;
    }
</style>

<h2>Laboratory Test Report</h2>
@using (Html.BeginForm("Index", "LabTest"))
{
    @Html.AntiForgeryToken()

<div>
    <hr />
    <div class="form-group">
        <label class="col-xs-2 mystyle labelColor">From:</label>
    </div>
    <div class="form-group">

        <div class="col-xs-12">

            @Html.EditorFor(model => model.fromDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.fromDate, "", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        <label class="col-xs-2 mystyle labelColor">To:</label>
    </div>


    <div class="form-group">
        <div class="col-xs-12">
            @Html.EditorFor(model => model.toDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.toDate, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="form-group">
        <label class="col-xs-2 mystyle labelColor"></label>
    </div>
    <div class="form-group">
        <div class=" col-xs-12">

            <input type="submit" name="sales" value="View Report " class="btn btn-default form-control" onclick="location.href='@Url.Action("Index", "LabTest")'" />

        </div>
    </div>

    <div class="form-group">
        <label class="col-xs-2 mystyle"></label>
    </div>
    <div class="form-group">
        <label class="col-xs-12 mystyle labelColor">Table of Laboratory Test Report from @ViewBag.from to @ViewBag.tdate </label>
    </div>

    @*Populating report to the table*@

    <div>
        <table class="table table-bordered table-striped">
            <tr>
                @for (int i = 0; i < Model.labtest.Columns.Count; i++)
                {
                    <td>@Model.labtest.Columns[i].ColumnName.ToString()</td>
                }
            </tr>

            @for (int r = 0; r < Model.labtest.Rows.Count; r++)
            {
                <tr>
                    @for (int i = 0; i < Model.labtest.Columns.Count; i++)
                    {
                        <td>@Model.labtest.Rows[r][i].ToString()</td>
                    }
                </tr>
            }

        </table>
    </div>

    @ViewBag.TestCount<br />

    @ViewBag.LabMessage

    <hr />

</div>
}
